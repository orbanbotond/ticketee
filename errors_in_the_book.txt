<%= link_to "New Project", new_project_path %>
is in application/index.html.erb
----
and 

<h2>Projects</h2>
<ul>
  <% @projects.each do |project| %>
    <li><%= link_to project.name, project %></li>
  <% end %>
</ul>

is in projects/index.html.erb
page 113
ch 4.3
-------------------------------------------------

page 159
ch 5.11
You can add the "Delete Ticket" link to the app/views/tickets/show.html.erb file just under the "Edit Project" link

however it should be
You can add the "Delete Ticket" link to the app/views/tickets/show.html.erb file just under the "Edit Ticket" link

-------------------------------------------------

page 206
ch 7.2

Under the let for user inside spec/controllers/projects_controller.rb, add one for project:
It should be 
Under the let for user inside spec/controllers/projects_controller_spec.rb, add one for project:

-------------------------------------------------
page 217
ch 7.4.1

missing route causes the spec to fail:
Failures:

  1) Admin::UsersController standard users are not able to access the index action
     Failure/Error: get 'index'
     ActionController::RoutingError:
       No route matches {:controller=>"admin/users"}
     # ./spec/controllers/admin/users_controller_spec.rb:8:in `block (3 levels) in <top (required)>'

This is the missing route:
  namespace :admin do
    resources :users
  end

That route is added later ch 7.5.1 page 223.
-------------------------------------------------
page 248

instead of
belongs_to :user, :polymorphic => true 

belongs_to :thing, :polymorphic => true
-----

listing 8.1
project.title 
-> project.name

-------
page 256
ch 8.2
Let’s change the first two lines of this test in spec/controllers/projects_controller.rb from this
Let’s change the first two lines of this test in spec/controllers/projects_controller_spec.rb from this

-------
page 260
define_permission(user, "view", project)
define_permission!(user, "view", project)
-------
page 262
Add this line again underneath where you create the TextMate 2 project, this time in features/viewing_tickets.feature
Add this line again underneath where you create the TextMate 2 project, this time in integration/viewing_tickets_spec.rb
-------
chapter 8.3.3
page 264

let!(:project_2) { Factory(:project, :name => "Internet Explorer")
let!(:project_2) { Factory(:project, :name => "Internet Explorer") }

--------
page 285

If you didn’t do this, you would get a confusing error in your test:
"NoMethodError:
  undefined method 'stringify_keys' for nil:NilClass"
Instead I get this:
Failure/Error: put :update, { :project_id => project.id,
     ActionController::RoutingError:
       No route matches {:project_id=>"572", :ticket=>{}, :controller=>"tickets", :action=>"update"}
----
page 286
before_filter :authorize_update!, :only => [:edit, :update]]]>
before_filter :authorize_update!, :only => [:edit, :update]
----
292
This helper uses CanCan’s can? method to check if the user is authorization to perform this action.
This helper uses CanCan’s can? method to check if the user is authorized to perform this action.


"With this helper implemented, all three new scenarios should pass."
They don't.

Failures:

  1) Deleting tickets admin New ticket link is shown to admins
     Failure/Error: assert_link_for "New Ticket"
       Expected to see the "New Ticket" link, but did not.
     # ./spec/support/capybara_helpers.rb:6:in `assert_link_for'
     # ./spec/integration/deleting_tickets_spec.rb:39:in `block (3 levels) in <top (required)>'

Finished in 1.3 seconds
4 examples, 1 failure

If I write somethign like this:
  describe "admin"do
    let!(:user) { Factory(:admin_user)}
    scenario "New ticket link is shown to admins" do
      visit project_path(project)
      assert_link_for "New Ticket"
    end
  end

Then all pass...
-----
page 293

I would paste this into the admin context... however the context isn't specified.

scenario "Edit ticket link is shown to admins" do
   visit project_path(project)
   click_link ticket.title
   assert_link_for "Edit Ticket"
end
-------
8.9.1

The code isn't clear wich file belongs to...
------------
Page 300
Not sure which spec to run to get this error:
  And I follow "Permissions"
     The action 'index' could not be found for Admin::PermissionsController
I suppose that the admin/permission_controller_spec but that is empty
------
page 301
Which code belongs to?
@ability.can?(:view, @project) TODOOO
------
page 302
id='project_<%= project_id %>'>
should be 
            id='project_<%= project.id %>'>
-------
"Failure/Error: check_permission_box "view", project
     NoMethodError:
       undefined method `check_permission_box' for #<RSpec::Core::ExampleGroup::Nested_3:0x007fa2edcb2d10>"

The check_permission_box is defined on page 306
def check_permission_box(permission, object)
   check "permissions_#{object.id}_#{permission}"
end
-------
page 340
listing 9.9.

let(:ticket) { Factory(:ticket, :project => project,
                                  :user => user) }
                                  NameError:
       undefined local variable or method `user' for #<RSpec::Core::ExampleGroup::Nested_1::Nested_2:0x007fe449bfd030>

So I created a user in another let block
------------
At the end of chapter 9
In this scenario:
  scenario "Creating a ticket with an attachment", :js => true do

This works only.
    attach_file "File #1", File.join( Rails.root, "spec/fixtures/speed.txt")

This doesn't
    attach_file "File #1", "spec/fixtures/speed.txt"
-------------
